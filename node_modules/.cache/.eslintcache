[{"/Users/mana/Developer/capstone/safar-front-end/src/index.js":"1","/Users/mana/Developer/capstone/safar-front-end/src/App.js":"2","/Users/mana/Developer/capstone/safar-front-end/src/reportWebVitals.js":"3","/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js":"4"},{"size":168,"mtime":1628902301557,"results":"5","hashOfConfig":"6"},{"size":319,"mtime":1628903933372,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1628658776080,"results":"8","hashOfConfig":"6"},{"size":2515,"mtime":1628996404591,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"3g920n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mana/Developer/capstone/safar-front-end/src/index.js",[],["20","21"],"/Users/mana/Developer/capstone/safar-front-end/src/App.js",[],"/Users/mana/Developer/capstone/safar-front-end/src/reportWebVitals.js",[],["22","23"],"/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":28,"column":23,"nodeType":"34","messageId":"35","endLine":28,"endColumn":39},{"ruleId":"36","severity":1,"message":"37","line":60,"column":23,"nodeType":"38","endLine":65,"endColumn":10},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],["39"],["40"],"no-unused-vars","'setaddressToSave' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'addressToSave' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-global-assign","no-unsafe-negation"]