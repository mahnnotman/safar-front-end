{"ast":null,"code":"var _jsxFileName = \"/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current);\n  autoComplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n  autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n  console.log(addressObject.geometry.location.lat());\n  const addressToSave = {\n    place_id: addressObject.place_id,\n    name: addressObject.name,\n    lat: addressObject.geometry.location.lat(),\n    lng: addressObject.geometry.location.lon()\n  };\n}\n\nfunction SearchLocationInput() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []); //   handleSubmit = event => {\n  //     event.preventDefault();\n  //     axios\n  //     .post(\"INSERT ABBYS LOCAL PATH\", addressToSave)\n  //     .then((response) => {\n  //       console.log('response:', response);\n  //       console.log('response data:', response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log('error:', error);\n  //       console.log('error response:', error.response);\n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-location-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: autoCompleteRef,\n      onChange: event => setQuery(event.target.value),\n      placeholder: \"where to?\",\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"wishlist\",\n      onClick: \"handleSubmit\",\n      children: \"wishlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchLocationInput, \"cw7s3e3vkyUWL/AnWpSxZTGSPcQ=\");\n\n_c = SearchLocationInput;\nexport default SearchLocationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchLocationInput\");","map":{"version":3,"sources":["/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js"],"names":["React","useState","useEffect","useRef","axios","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","geometry","location","lat","addressToSave","place_id","name","lng","lon","SearchLocationInput","setQuery","process","env","REACT_APP_GOOGLE_API_KEY","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function() {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n  );\n  autoComplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n  console.log(addressObject.geometry.location.lat());\n  const addressToSave = {\n      place_id: addressObject.place_id,\n      name: addressObject.name,\n      lat: addressObject.geometry.location.lat(),\n      lng: addressObject.geometry.location.lon()\n  }\n}\n\nfunction SearchLocationInput() {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     axios\n//     .post(\"INSERT ABBYS LOCAL PATH\", addressToSave)\n//     .then((response) => {\n//       console.log('response:', response);\n//       console.log('response data:', response.data);\n//     })\n//     .catch((error) => {\n//       console.log('error:', error);\n//       console.log('error response:', error.response);\n//     });\n// }\n\n  return (\n    <div className=\"search-location-input\">\n      <input\n        ref={autoCompleteRef}\n        onChange={event => setQuery(event.target.value)}\n        placeholder=\"where to?\"\n        value={query}\n      />\n      <button type=\"wishlist\" onClick=\"handleSubmit\">wishlist</button>\n    </div>\n  );\n}\n\nexport default SearchLocationInput;"]},"metadata":{},"sourceType":"module"}