{"ast":null,"code":"var _jsxFileName = \"/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './SearchLocationInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction SearchLocationInput(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  let [addressToSave, setaddressToSave] = useState({});\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(addressToSave);\n    axios.post(\"http://localhost:5000/places\", addressToSave).then(response => {\n      console.log('response:', response);\n      console.log('response data:', response.data);\n      props.addPlace(response.data.place);\n      setQuery(\"\");\n    }).catch(error => {\n      console.log('error:', error);\n      console.log('error response:', error.response);\n    });\n  };\n\n  useEffect(() => {\n    const handleScriptLoad = (updateQuery, autoCompleteRef) => {\n      autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current);\n      autoComplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n      autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n    };\n\n    const handlePlaceSelect = updateQuery => {\n      const addressObject = autoComplete.getPlace();\n      const query = addressObject.formatted_address;\n      updateQuery(query);\n      console.log(addressObject);\n      let address = {\n        google_place_id: addressObject.place_id,\n        name: addressObject.name,\n        lat: addressObject.geometry.location.lat(),\n        lng: addressObject.geometry.location.lng()\n      };\n      setaddressToSave(address);\n    };\n\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-location-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: autoCompleteRef,\n      onChange: event => setQuery(event.target.value),\n      placeholder: \"where to?\",\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"wishlist\",\n      onClick: handleSubmit,\n      children: \"wishlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchLocationInput, \"ZsM/7s4cvUCEJ0xBdVggB/26gns=\");\n\n_c = SearchLocationInput;\nexport default SearchLocationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchLocationInput\");","map":{"version":3,"sources":["/Users/mana/Developer/capstone/safar-front-end/src/components/SearchLocationInput.js"],"names":["React","useState","useEffect","useRef","axios","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","SearchLocationInput","props","query","setQuery","autoCompleteRef","addressToSave","setaddressToSave","handleSubmit","event","preventDefault","console","log","post","then","response","data","addPlace","place","catch","error","handleScriptLoad","updateQuery","window","google","maps","places","Autocomplete","current","setFields","addListener","handlePlaceSelect","addressObject","getPlace","formatted_address","address","google_place_id","place_id","name","lat","geometry","location","lng","process","env","REACT_APP_GOOGLE_API_KEY","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './SearchLocationInput.css';\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction SearchLocationInput(props) {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  let [addressToSave, setaddressToSave] = useState({})\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(addressToSave)\n    axios\n      .post(\"http://localhost:5000/places\", addressToSave)\n      .then((response) => {\n        console.log('response:', response);\n        console.log('response data:', response.data);\n        props.addPlace(response.data.place);\n        setQuery(\"\")\n      })\n      .catch((error) => {\n        console.log('error:', error);\n        console.log('error response:', error.response);\n      });\n  }\n\n  useEffect(() => {\n    const handleScriptLoad = (updateQuery, autoCompleteRef) => {\n      autoComplete = new window.google.maps.places.Autocomplete(\n        autoCompleteRef.current,\n      );\n      autoComplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n      autoComplete.addListener(\"place_changed\", () =>\n        handlePlaceSelect(updateQuery)\n      );\n    }\n    const handlePlaceSelect = (updateQuery) => {\n      const addressObject = autoComplete.getPlace();\n      const query = addressObject.formatted_address;\n      updateQuery(query);\n      console.log(addressObject);\n      let address = {\n        google_place_id: addressObject.place_id,\n        name: addressObject.name,\n        lat: addressObject.geometry.location.lat(),\n        lng: addressObject.geometry.location.lng()\n      };\n      setaddressToSave(address);\n    }\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n  return (\n    <div className=\"search-location-input\">\n      <input\n        ref={autoCompleteRef}\n        onChange={event => setQuery(event.target.value)}\n        placeholder=\"where to?\"\n        value={query}\n      />\n      <button type=\"wishlist\" onClick={handleSubmit}>wishlist</button>\n    </div>\n  );\n}\n\nexport default SearchLocationInput;"]},"metadata":{},"sourceType":"module"}