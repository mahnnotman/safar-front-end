{"ast":null,"code":"var _jsxFileName = \"/Users/mana/Developer/capstone/safar-front-end/src/components/ItineraryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItineraryForm() {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [checkedState, setCheckedState] = useState([]);\n  const [itineraryName, setItineraryName] = useState(\"\");\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n  };\n\n  const handleSubmit = event => {\n    const placeIds = [];\n\n    for (let i = 0; i < checkedState.length; i++) {\n      if (checkedState[i] === true) {\n        placeIds.push(places[i].place_id);\n      }\n    }\n\n    event.preventDefault();\n    console.log(checkedState);\n    axios.post(\"https://safarcapstone.herokuapp.com/itinerary/itinerary_with_places\", {\n      itinerary_name: itineraryName,\n      place_ids: placeIds\n    }).then(response => {\n      console.log('response:', response);\n      console.log('response data:', response.data);\n    }).catch(error => {\n      console.log('error:', error);\n      console.log('error response:', error.response);\n    });\n  };\n\n  useEffect(() => {\n    fetch(\"https://safarcapstone.herokuapp.com/places\").then(response => response.json().then(data => {\n      console.log(data);\n      setPlaces(data);\n      setCheckedState(new Array(data.length).fill(false));\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What do you want to see?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Itinerary Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => setItineraryName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [console.log(places), \";\", places.map(({\n          name\n        }, index) => {\n          console.log(name);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `custom-checkbox-${index}`,\n                  name: name,\n                  value: name,\n                  checked: checkedState[index],\n                  onChange: () => handleOnChange(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `custom-checkbox-${index}`,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"right-section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"create itinerary\",\n        onClick: handleSubmit,\n        children: \"create itinerary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItineraryForm, \"MvMWSud6HtzHj9f39fLuaZIbR4g=\");\n\n_c = ItineraryForm;\nexport default ItineraryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItineraryForm\");","map":{"version":3,"sources":["/Users/mana/Developer/capstone/safar-front-end/src/components/ItineraryForm.js"],"names":["React","useState","useEffect","axios","ItineraryForm","places","setPlaces","checkedState","setCheckedState","itineraryName","setItineraryName","handleOnChange","position","updatedCheckedState","map","item","index","handleSubmit","event","placeIds","i","length","push","place_id","preventDefault","console","log","post","itinerary_name","place_ids","then","response","data","catch","error","fetch","json","Array","fill","target","value","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ItineraryForm() {\n    const [places, setPlaces] = useState([]);\n    const [checkedState, setCheckedState] = useState([]);\n    const [itineraryName, setItineraryName] = useState(\"\")\n\n    const handleOnChange = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) =>\n          index === position ? !item : item\n        );\n        setCheckedState(updatedCheckedState);\n    }\n        \n    const handleSubmit = (event) => {\n        const placeIds = []\n            for (let i = 0; i < checkedState.length; i++){\n                if (checkedState[i] === true){\n                    placeIds.push(places[i].place_id)\n                }\n            }\n\n        event.preventDefault();\n        console.log(checkedState)\n        axios\n          .post(\"https://safarcapstone.herokuapp.com/itinerary/itinerary_with_places\", \n          {itinerary_name: itineraryName,\n            place_ids: placeIds})\n          .then((response) => {\n            console.log('response:', response);\n            console.log('response data:', response.data);\n          })\n          .catch((error) => {\n            console.log('error:', error);\n            console.log('error response:', error.response);\n          });\n      }\n\n    useEffect(() => {\n        fetch(\"https://safarcapstone.herokuapp.com/places\").then(response => \n            response.json().then(data => {\n                console.log(data)\n                setPlaces(data);\n                setCheckedState(new Array(data.length).fill(false));\n            })\n        );\n    }, []);\n    \n    return (\n        <form>\n            <div>\n                <h3>What do you want to see?</h3>\n                    <label>\n                        Itinerary Name: <input type=\"text\" onChange={(event) => setItineraryName(event.target.value)}/>\n                    </label>\n                    <ul>\n                        {console.log(places)};\n                        {places.map(({ name }, index) => {\n                            console.log(name);\n                        return (\n                            <li key={index}>\n                            <div>\n                                <div className=\"left-section\">\n                                <input\n                                    type=\"checkbox\"\n                                    id={`custom-checkbox-${index}`}\n                                    name={name}\n                                    value={name}\n                                    checked={checkedState[index]}\n                                    onChange={() => handleOnChange(index)}\n                                />\n                                <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                                </div>\n                                <div className=\"right-section\"></div>\n                            </div>\n                            </li>\n                        );\n                        })}\n                    </ul>\n                    <button type=\"create itinerary\" onClick={handleSubmit}>create itinerary</button>\n            </div>\n        </form>\n        );\n}\n\nexport default ItineraryForm;"]},"metadata":{},"sourceType":"module"}